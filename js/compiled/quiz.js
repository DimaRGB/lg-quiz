// Generated by CoffeeScript 1.6.3
define({
  index: -1,
  init: function(data) {
    this.data = data != null ? data : {};
    'use strict';
    this.maxIndex = this.data.pages.length;
    this.$quiz = $('.quiz');
    this.$quiz.removeClass('spinner');
    return this;
  },
  renderPage: function(index) {
    'use strict';
    var $answers, animTime, isDone, page,
      _this = this;
    if (index === this.index || index < 0 || index > this.maxIndex) {
      return;
    }
    this.index = index;
    page = this.data.pages[this.index];
    isDone = !page.next;
    animTime = 80;
    this.$quiz.find('.question').fadeOut(animTime, function() {
      $(this).html(page.question + ' ' + index);
      return $(this).fadeIn(animTime);
    });
    $answers = this.$quiz.find('.answers');
    return $answers.fadeOut(animTime, function() {
      var i, next, _i, _ref;
      $answers.empty();
      for (i = _i = 0, _ref = page.answer.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        next = isDone ? -1 : page.next[i];
        _this.appendAnswer(page.answer[i], next, $answers);
      }
      return $answers.fadeIn(animTime, function() {
        if (isDone) {
          return alert('Quiz done !!!');
        }
      });
    });
  },
  appendAnswer: function(answer, next, $answers) {
    return $('<div class="answer">' + answer + '</div>').data('next', next).appendTo($answers);
  },
  run: function() {
    'use strict';
    var _this = this;
    this.$quiz.find('.answers').on('click', '.answer', function(e) {
      var next;
      next = parseInt($(e.target).data('next'));
      if (~next) {
        return _this.renderPage(next);
      } else {
        return console.log('!!!!!');
      }
    });
    return this;
  }
});
