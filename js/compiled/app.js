// Generated by CoffeeScript 1.6.3
var _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

jQuery(function() {
  return app.checkUserRole();
});

window.App = (function(_super) {
  __extends(App, _super);

  function App() {
    _ref = App.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  App.prototype.Models = {};

  App.prototype.Collections = {};

  App.prototype.Views = {};

  App.prototype.Routers = {};

  App.prototype.router = null;

  App.prototype.user = null;

  App.prototype.checkUserRole = function(options) {
    var _this = this;
    this.user = new app.Models.CurrentUser;
    return this.user.fetch({
      success: function() {
        if (_this.user.get('role') === 'admin') {
          _this.router = new _this.Routers.Admin;
          return (new app.Views.AdminMenu).render().show();
        } else {
          if (_this.user.get('surveyed')) {
            _this.router = new _this.Routers.User;
          } else {
            _this.router = new _this.Routers.NewUser;
          }
          return (new app.Views.UserMenu).render().show();
        }
      },
      error: function() {
        _this.router = new _this.Routers.Guest;
        return (new app.Views.GuestMenu).render().show();
      }
    }).always(function() {
      if (options && options.redirect) {
        _this.router.navigateReplace('#/');
      }
      Backbone.history.stop();
      return Backbone.history.start();
    });
  };

  return App;

})(Backbone.Model);

window.app = new App;
